/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as NovedadesIndexRouteImport } from './routes/novedades/index'
import { Route as AquariumIndexRouteImport } from './routes/aquarium/index'
import { Route as AboutIndexRouteImport } from './routes/about/index'
import { Route as ExpertoIntroExpertoRouteImport } from './routes/experto/introExperto'
import { Route as CommunityIntroCommunityRouteImport } from './routes/community/introCommunity'
import { Route as ArticlesIntroArticlesRouteImport } from './routes/articles/introArticles'
import { Route as ExpertoPostIndexRouteImport } from './routes/experto/post/index'
import { Route as CommunityForumIndexRouteImport } from './routes/community/forum/index'
import { Route as AuthRegisterIndexRouteImport } from './routes/auth/register/index'
import { Route as AuthLoginIndexRouteImport } from './routes/auth/login/index'
import { Route as ArticlesCategoryIndexRouteImport } from './routes/articles/category/index'
import { Route as AquariumLetterIndexRouteImport } from './routes/aquarium/letter/index'
import { Route as ExpertoPostNewRouteImport } from './routes/experto/post/new'
import { Route as CommunityForumNewRouteImport } from './routes/community/forum/new'
import { Route as ArticlesCategoryNewRouteImport } from './routes/articles/category/new'
import { Route as AquariumLetterNewRouteImport } from './routes/aquarium/letter/new'
import { Route as ExpertoPostPostidIndexRouteImport } from './routes/experto/post/$postid/index'
import { Route as CommunityForumForumidIndexRouteImport } from './routes/community/forum/$forumid/index'
import { Route as ArticlesCategoryCategoryidIndexRouteImport } from './routes/articles/category/$categoryid/index'
import { Route as AquariumLetterLetteridIndexRouteImport } from './routes/aquarium/letter/$letterid/index'
import { Route as ExpertoPostMapMapPostRouteImport } from './routes/experto/post/map/mapPost'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const NovedadesIndexRoute = NovedadesIndexRouteImport.update({
  id: '/novedades/',
  path: '/novedades/',
  getParentRoute: () => rootRouteImport,
} as any)
const AquariumIndexRoute = AquariumIndexRouteImport.update({
  id: '/aquarium/',
  path: '/aquarium/',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutIndexRoute = AboutIndexRouteImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => rootRouteImport,
} as any)
const ExpertoIntroExpertoRoute = ExpertoIntroExpertoRouteImport.update({
  id: '/experto/introExperto',
  path: '/experto/introExperto',
  getParentRoute: () => rootRouteImport,
} as any)
const CommunityIntroCommunityRoute = CommunityIntroCommunityRouteImport.update({
  id: '/community/introCommunity',
  path: '/community/introCommunity',
  getParentRoute: () => rootRouteImport,
} as any)
const ArticlesIntroArticlesRoute = ArticlesIntroArticlesRouteImport.update({
  id: '/articles/introArticles',
  path: '/articles/introArticles',
  getParentRoute: () => rootRouteImport,
} as any)
const ExpertoPostIndexRoute = ExpertoPostIndexRouteImport.update({
  id: '/experto/post/',
  path: '/experto/post/',
  getParentRoute: () => rootRouteImport,
} as any)
const CommunityForumIndexRoute = CommunityForumIndexRouteImport.update({
  id: '/community/forum/',
  path: '/community/forum/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRegisterIndexRoute = AuthRegisterIndexRouteImport.update({
  id: '/auth/register/',
  path: '/auth/register/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginIndexRoute = AuthLoginIndexRouteImport.update({
  id: '/auth/login/',
  path: '/auth/login/',
  getParentRoute: () => rootRouteImport,
} as any)
const ArticlesCategoryIndexRoute = ArticlesCategoryIndexRouteImport.update({
  id: '/articles/category/',
  path: '/articles/category/',
  getParentRoute: () => rootRouteImport,
} as any)
const AquariumLetterIndexRoute = AquariumLetterIndexRouteImport.update({
  id: '/aquarium/letter/',
  path: '/aquarium/letter/',
  getParentRoute: () => rootRouteImport,
} as any)
const ExpertoPostNewRoute = ExpertoPostNewRouteImport.update({
  id: '/experto/post/new',
  path: '/experto/post/new',
  getParentRoute: () => rootRouteImport,
} as any)
const CommunityForumNewRoute = CommunityForumNewRouteImport.update({
  id: '/community/forum/new',
  path: '/community/forum/new',
  getParentRoute: () => rootRouteImport,
} as any)
const ArticlesCategoryNewRoute = ArticlesCategoryNewRouteImport.update({
  id: '/articles/category/new',
  path: '/articles/category/new',
  getParentRoute: () => rootRouteImport,
} as any)
const AquariumLetterNewRoute = AquariumLetterNewRouteImport.update({
  id: '/aquarium/letter/new',
  path: '/aquarium/letter/new',
  getParentRoute: () => rootRouteImport,
} as any)
const ExpertoPostPostidIndexRoute = ExpertoPostPostidIndexRouteImport.update({
  id: '/experto/post/$postid/',
  path: '/experto/post/$postid/',
  getParentRoute: () => rootRouteImport,
} as any)
const CommunityForumForumidIndexRoute =
  CommunityForumForumidIndexRouteImport.update({
    id: '/community/forum/$forumid/',
    path: '/community/forum/$forumid/',
    getParentRoute: () => rootRouteImport,
  } as any)
const ArticlesCategoryCategoryidIndexRoute =
  ArticlesCategoryCategoryidIndexRouteImport.update({
    id: '/articles/category/$categoryid/',
    path: '/articles/category/$categoryid/',
    getParentRoute: () => rootRouteImport,
  } as any)
const AquariumLetterLetteridIndexRoute =
  AquariumLetterLetteridIndexRouteImport.update({
    id: '/aquarium/letter/$letterid/',
    path: '/aquarium/letter/$letterid/',
    getParentRoute: () => rootRouteImport,
  } as any)
const ExpertoPostMapMapPostRoute = ExpertoPostMapMapPostRouteImport.update({
  id: '/experto/post/map/mapPost',
  path: '/experto/post/map/mapPost',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/articles/introArticles': typeof ArticlesIntroArticlesRoute
  '/community/introCommunity': typeof CommunityIntroCommunityRoute
  '/experto/introExperto': typeof ExpertoIntroExpertoRoute
  '/about': typeof AboutIndexRoute
  '/aquarium': typeof AquariumIndexRoute
  '/novedades': typeof NovedadesIndexRoute
  '/aquarium/letter/new': typeof AquariumLetterNewRoute
  '/articles/category/new': typeof ArticlesCategoryNewRoute
  '/community/forum/new': typeof CommunityForumNewRoute
  '/experto/post/new': typeof ExpertoPostNewRoute
  '/aquarium/letter': typeof AquariumLetterIndexRoute
  '/articles/category': typeof ArticlesCategoryIndexRoute
  '/auth/login': typeof AuthLoginIndexRoute
  '/auth/register': typeof AuthRegisterIndexRoute
  '/community/forum': typeof CommunityForumIndexRoute
  '/experto/post': typeof ExpertoPostIndexRoute
  '/experto/post/map/mapPost': typeof ExpertoPostMapMapPostRoute
  '/aquarium/letter/$letterid': typeof AquariumLetterLetteridIndexRoute
  '/articles/category/$categoryid': typeof ArticlesCategoryCategoryidIndexRoute
  '/community/forum/$forumid': typeof CommunityForumForumidIndexRoute
  '/experto/post/$postid': typeof ExpertoPostPostidIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/articles/introArticles': typeof ArticlesIntroArticlesRoute
  '/community/introCommunity': typeof CommunityIntroCommunityRoute
  '/experto/introExperto': typeof ExpertoIntroExpertoRoute
  '/about': typeof AboutIndexRoute
  '/aquarium': typeof AquariumIndexRoute
  '/novedades': typeof NovedadesIndexRoute
  '/aquarium/letter/new': typeof AquariumLetterNewRoute
  '/articles/category/new': typeof ArticlesCategoryNewRoute
  '/community/forum/new': typeof CommunityForumNewRoute
  '/experto/post/new': typeof ExpertoPostNewRoute
  '/aquarium/letter': typeof AquariumLetterIndexRoute
  '/articles/category': typeof ArticlesCategoryIndexRoute
  '/auth/login': typeof AuthLoginIndexRoute
  '/auth/register': typeof AuthRegisterIndexRoute
  '/community/forum': typeof CommunityForumIndexRoute
  '/experto/post': typeof ExpertoPostIndexRoute
  '/experto/post/map/mapPost': typeof ExpertoPostMapMapPostRoute
  '/aquarium/letter/$letterid': typeof AquariumLetterLetteridIndexRoute
  '/articles/category/$categoryid': typeof ArticlesCategoryCategoryidIndexRoute
  '/community/forum/$forumid': typeof CommunityForumForumidIndexRoute
  '/experto/post/$postid': typeof ExpertoPostPostidIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/articles/introArticles': typeof ArticlesIntroArticlesRoute
  '/community/introCommunity': typeof CommunityIntroCommunityRoute
  '/experto/introExperto': typeof ExpertoIntroExpertoRoute
  '/about/': typeof AboutIndexRoute
  '/aquarium/': typeof AquariumIndexRoute
  '/novedades/': typeof NovedadesIndexRoute
  '/aquarium/letter/new': typeof AquariumLetterNewRoute
  '/articles/category/new': typeof ArticlesCategoryNewRoute
  '/community/forum/new': typeof CommunityForumNewRoute
  '/experto/post/new': typeof ExpertoPostNewRoute
  '/aquarium/letter/': typeof AquariumLetterIndexRoute
  '/articles/category/': typeof ArticlesCategoryIndexRoute
  '/auth/login/': typeof AuthLoginIndexRoute
  '/auth/register/': typeof AuthRegisterIndexRoute
  '/community/forum/': typeof CommunityForumIndexRoute
  '/experto/post/': typeof ExpertoPostIndexRoute
  '/experto/post/map/mapPost': typeof ExpertoPostMapMapPostRoute
  '/aquarium/letter/$letterid/': typeof AquariumLetterLetteridIndexRoute
  '/articles/category/$categoryid/': typeof ArticlesCategoryCategoryidIndexRoute
  '/community/forum/$forumid/': typeof CommunityForumForumidIndexRoute
  '/experto/post/$postid/': typeof ExpertoPostPostidIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/articles/introArticles'
    | '/community/introCommunity'
    | '/experto/introExperto'
    | '/about'
    | '/aquarium'
    | '/novedades'
    | '/aquarium/letter/new'
    | '/articles/category/new'
    | '/community/forum/new'
    | '/experto/post/new'
    | '/aquarium/letter'
    | '/articles/category'
    | '/auth/login'
    | '/auth/register'
    | '/community/forum'
    | '/experto/post'
    | '/experto/post/map/mapPost'
    | '/aquarium/letter/$letterid'
    | '/articles/category/$categoryid'
    | '/community/forum/$forumid'
    | '/experto/post/$postid'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/articles/introArticles'
    | '/community/introCommunity'
    | '/experto/introExperto'
    | '/about'
    | '/aquarium'
    | '/novedades'
    | '/aquarium/letter/new'
    | '/articles/category/new'
    | '/community/forum/new'
    | '/experto/post/new'
    | '/aquarium/letter'
    | '/articles/category'
    | '/auth/login'
    | '/auth/register'
    | '/community/forum'
    | '/experto/post'
    | '/experto/post/map/mapPost'
    | '/aquarium/letter/$letterid'
    | '/articles/category/$categoryid'
    | '/community/forum/$forumid'
    | '/experto/post/$postid'
  id:
    | '__root__'
    | '/'
    | '/articles/introArticles'
    | '/community/introCommunity'
    | '/experto/introExperto'
    | '/about/'
    | '/aquarium/'
    | '/novedades/'
    | '/aquarium/letter/new'
    | '/articles/category/new'
    | '/community/forum/new'
    | '/experto/post/new'
    | '/aquarium/letter/'
    | '/articles/category/'
    | '/auth/login/'
    | '/auth/register/'
    | '/community/forum/'
    | '/experto/post/'
    | '/experto/post/map/mapPost'
    | '/aquarium/letter/$letterid/'
    | '/articles/category/$categoryid/'
    | '/community/forum/$forumid/'
    | '/experto/post/$postid/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ArticlesIntroArticlesRoute: typeof ArticlesIntroArticlesRoute
  CommunityIntroCommunityRoute: typeof CommunityIntroCommunityRoute
  ExpertoIntroExpertoRoute: typeof ExpertoIntroExpertoRoute
  AboutIndexRoute: typeof AboutIndexRoute
  AquariumIndexRoute: typeof AquariumIndexRoute
  NovedadesIndexRoute: typeof NovedadesIndexRoute
  AquariumLetterNewRoute: typeof AquariumLetterNewRoute
  ArticlesCategoryNewRoute: typeof ArticlesCategoryNewRoute
  CommunityForumNewRoute: typeof CommunityForumNewRoute
  ExpertoPostNewRoute: typeof ExpertoPostNewRoute
  AquariumLetterIndexRoute: typeof AquariumLetterIndexRoute
  ArticlesCategoryIndexRoute: typeof ArticlesCategoryIndexRoute
  AuthLoginIndexRoute: typeof AuthLoginIndexRoute
  AuthRegisterIndexRoute: typeof AuthRegisterIndexRoute
  CommunityForumIndexRoute: typeof CommunityForumIndexRoute
  ExpertoPostIndexRoute: typeof ExpertoPostIndexRoute
  ExpertoPostMapMapPostRoute: typeof ExpertoPostMapMapPostRoute
  AquariumLetterLetteridIndexRoute: typeof AquariumLetterLetteridIndexRoute
  ArticlesCategoryCategoryidIndexRoute: typeof ArticlesCategoryCategoryidIndexRoute
  CommunityForumForumidIndexRoute: typeof CommunityForumForumidIndexRoute
  ExpertoPostPostidIndexRoute: typeof ExpertoPostPostidIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/novedades/': {
      id: '/novedades/'
      path: '/novedades'
      fullPath: '/novedades'
      preLoaderRoute: typeof NovedadesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/aquarium/': {
      id: '/aquarium/'
      path: '/aquarium'
      fullPath: '/aquarium'
      preLoaderRoute: typeof AquariumIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about/': {
      id: '/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/experto/introExperto': {
      id: '/experto/introExperto'
      path: '/experto/introExperto'
      fullPath: '/experto/introExperto'
      preLoaderRoute: typeof ExpertoIntroExpertoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/community/introCommunity': {
      id: '/community/introCommunity'
      path: '/community/introCommunity'
      fullPath: '/community/introCommunity'
      preLoaderRoute: typeof CommunityIntroCommunityRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/articles/introArticles': {
      id: '/articles/introArticles'
      path: '/articles/introArticles'
      fullPath: '/articles/introArticles'
      preLoaderRoute: typeof ArticlesIntroArticlesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/experto/post/': {
      id: '/experto/post/'
      path: '/experto/post'
      fullPath: '/experto/post'
      preLoaderRoute: typeof ExpertoPostIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/community/forum/': {
      id: '/community/forum/'
      path: '/community/forum'
      fullPath: '/community/forum'
      preLoaderRoute: typeof CommunityForumIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/register/': {
      id: '/auth/register/'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login/': {
      id: '/auth/login/'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/articles/category/': {
      id: '/articles/category/'
      path: '/articles/category'
      fullPath: '/articles/category'
      preLoaderRoute: typeof ArticlesCategoryIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/aquarium/letter/': {
      id: '/aquarium/letter/'
      path: '/aquarium/letter'
      fullPath: '/aquarium/letter'
      preLoaderRoute: typeof AquariumLetterIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/experto/post/new': {
      id: '/experto/post/new'
      path: '/experto/post/new'
      fullPath: '/experto/post/new'
      preLoaderRoute: typeof ExpertoPostNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/community/forum/new': {
      id: '/community/forum/new'
      path: '/community/forum/new'
      fullPath: '/community/forum/new'
      preLoaderRoute: typeof CommunityForumNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/articles/category/new': {
      id: '/articles/category/new'
      path: '/articles/category/new'
      fullPath: '/articles/category/new'
      preLoaderRoute: typeof ArticlesCategoryNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/aquarium/letter/new': {
      id: '/aquarium/letter/new'
      path: '/aquarium/letter/new'
      fullPath: '/aquarium/letter/new'
      preLoaderRoute: typeof AquariumLetterNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/experto/post/$postid/': {
      id: '/experto/post/$postid/'
      path: '/experto/post/$postid'
      fullPath: '/experto/post/$postid'
      preLoaderRoute: typeof ExpertoPostPostidIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/community/forum/$forumid/': {
      id: '/community/forum/$forumid/'
      path: '/community/forum/$forumid'
      fullPath: '/community/forum/$forumid'
      preLoaderRoute: typeof CommunityForumForumidIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/articles/category/$categoryid/': {
      id: '/articles/category/$categoryid/'
      path: '/articles/category/$categoryid'
      fullPath: '/articles/category/$categoryid'
      preLoaderRoute: typeof ArticlesCategoryCategoryidIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/aquarium/letter/$letterid/': {
      id: '/aquarium/letter/$letterid/'
      path: '/aquarium/letter/$letterid'
      fullPath: '/aquarium/letter/$letterid'
      preLoaderRoute: typeof AquariumLetterLetteridIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/experto/post/map/mapPost': {
      id: '/experto/post/map/mapPost'
      path: '/experto/post/map/mapPost'
      fullPath: '/experto/post/map/mapPost'
      preLoaderRoute: typeof ExpertoPostMapMapPostRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ArticlesIntroArticlesRoute: ArticlesIntroArticlesRoute,
  CommunityIntroCommunityRoute: CommunityIntroCommunityRoute,
  ExpertoIntroExpertoRoute: ExpertoIntroExpertoRoute,
  AboutIndexRoute: AboutIndexRoute,
  AquariumIndexRoute: AquariumIndexRoute,
  NovedadesIndexRoute: NovedadesIndexRoute,
  AquariumLetterNewRoute: AquariumLetterNewRoute,
  ArticlesCategoryNewRoute: ArticlesCategoryNewRoute,
  CommunityForumNewRoute: CommunityForumNewRoute,
  ExpertoPostNewRoute: ExpertoPostNewRoute,
  AquariumLetterIndexRoute: AquariumLetterIndexRoute,
  ArticlesCategoryIndexRoute: ArticlesCategoryIndexRoute,
  AuthLoginIndexRoute: AuthLoginIndexRoute,
  AuthRegisterIndexRoute: AuthRegisterIndexRoute,
  CommunityForumIndexRoute: CommunityForumIndexRoute,
  ExpertoPostIndexRoute: ExpertoPostIndexRoute,
  ExpertoPostMapMapPostRoute: ExpertoPostMapMapPostRoute,
  AquariumLetterLetteridIndexRoute: AquariumLetterLetteridIndexRoute,
  ArticlesCategoryCategoryidIndexRoute: ArticlesCategoryCategoryidIndexRoute,
  CommunityForumForumidIndexRoute: CommunityForumForumidIndexRoute,
  ExpertoPostPostidIndexRoute: ExpertoPostPostidIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
